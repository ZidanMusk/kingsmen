#ifndef KINGSMEN_EVALUATE_H
#define KINGSMEN_EVALUATE_H

#include "Board.cpp"


class PawnHashTable {
public:
    PawnHashTable() {
        setSize(4);
    }

    void setSize(size_t sizeInMegaBytes) {
        // If size is not a power of two make it the biggest power of two smaller than size.
        if ((sizeInMegaBytes & (sizeInMegaBytes - 1)) != 0) {
            sizeInMegaBytes = static_cast<size_t>(1ull << (ull) (log2(sizeInMegaBytes)));
        }

        const auto tableSize = ((sizeInMegaBytes * 1024 * 1024) / sizeof(PawnHashTableEntry));
        Table.clear();
        Table.resize(tableSize);
        Table.shrink_to_fit();
    }

    void clear() {
        const auto tableSize = Table.size();
        Table.clear();
        Table.resize(tableSize);
    }

    void save(ull phk, int scoreOp, int scoreEd) {
        auto &hashEntry = Table[phk & (Table.size() - 1)];

        hashEntry.setData((scoreOp & 0xffff) | (scoreEd << 16));
        hashEntry.setHash(phk ^ hashEntry.getData());

        assert(hashEntry.getScoreOp() == scoreOp);
        assert(hashEntry.getScoreEd() == scoreEd);
    }

    bool probe(ull phk, int &scoreOp, int &scoreEd) const {
        const auto &hashEntry = Table[phk & (Table.size() - 1)];

        if ((hashEntry.getHash() ^ hashEntry.getData()) == phk) {
            scoreOp = hashEntry.getScoreOp();
            scoreEd = hashEntry.getScoreEd();
            return true;
        }

        return false;
    }

private:
    class PawnHashTableEntry {
    public:
        PawnHashTableEntry() noexcept : Hash(0), Data(0) {
        }

        void setHash(uint64_t newHash) noexcept {
            Hash = newHash;
        }

        void setData(uint64_t newData) noexcept {
            Data = newData;
        }

        uint64_t getHash() const noexcept {
            return Hash;
        }

        uint64_t getData() const noexcept {
            return Data;
        }

        int16_t getScoreOp() const noexcept {
            return static_cast<int16_t>(Data);
        }

        int16_t getScoreEd() const noexcept {
            return static_cast<int16_t>(Data >> 16);
        }

    private:
        uint64_t Hash;
        uint64_t Data;
    };

    std::vector<PawnHashTableEntry> Table;
};

class Evaluate {

    Board *_board;
    PawnHashTable pht;

    ull Rays[64][8] = {
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    1,                    2,                    4,                    8,                    16,                   32,                  64},
            {0,                    256,                  513,                  1026,                 2052,                 4104,                 8208,                16416},
            {0,                    65536,                131328,               262657,               525314,               1050628,              2101256,             4202512},
            {0,                    16777216,             33619968,             67240192,             134480385,            268960770,            537921540,           1075843080},
            {0,                    4294967296,           8606711808,           17213489152,          34426978560,          68853957121,          137707914242,        275415828484},
            {0,                    1099511627776,        2203318222848,        4406653222912,        8813306511360,        17626613022976,       35253226045953,      70506452091906},
            {0,                    281474976710656,      564049465049088,      1128103225065472,     2256206466908160,     4512412933881856,     9024825867763968,    18049651735527937},
            {282578800148737,      565157600297474,      1130315200594948,     2260630401189896,     4521260802379792,     9042521604759584,     18085043209519168,   36170086419038336},
            {567382630219904,      1134765260439552,     2269530520813568,     4539061024849920,     9078117754732544,     18155135997837312,    36028797018963968,   0},
            {0,                    72057594037927936,    216172782113783808,   504403158265495552,   1080863910568919040,  2233785415175766016,  4539628424389459968, 9151314442816847872},
            {18302628885633695744, 18158513697557839872, 17870283321406128128, 17293822569102704640, 16140901064495857664, 13835058055282163712, 9223372036854775808, 0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
            {0,                    0,                    0,                    0,                    0,                    0,                    0,                   0},
    };
    //================================================================================
    ull Passed[64][2] = {
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {281474976710656,      845524441759744},
            {1973627666825216,     3948359157022720},
            {7896722625855488,     15793445268553984},
            {31586890537173761,    27074477603291905},
            {847736400446211,      1978051601041159},
            {3956103202082318,     7912206404164636},
            {15824412808329272,    31648825616658544},
            {63297651233317088,    54255129628557504},
            {1702147890659456,     3971678411473024},
            {7943356806103040,     15886709300396032},
            {31772314777419776,    63262050771533824},
            {54183933016801280,    36028797018963968},
            {72057594037927936,    216172782113783808},
            {504403158265495552,   1080863910568919040},
            {2233785415175766016,  4539628424389459968},
            {9151314442816847872,  9151314442816847872},
            {18302628885633695744, 18302628885633695744},
            {18158513697557839872, 17870283321406128128},
            {17293822569102704640, 16140901064495857664},
            {13835058055282163712, 9223372036854775808},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {31586890537173761,    27074477603291905},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
    };
    //================================================================================
    ull Backward[64][2] = {
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {65536,                131328},
            {1099511955969,        2203318879490},
            {5506166163973,        11016627360778},
            {22033271499028,       44066534658569},
            {88133081892098,       35253259665921},
            {281475060728064,      564049633149441},
            {1409578537977090,     2820256604359173},
            {5640517503751178,     11281032872593668},
            {22562068964377089,    9024834474475776},
            {565179075199490,      1412936950547717},
            {2825873901160971,     5651747802322198},
            {11303495604644397,    22606441451377746},
            {45213707535425696,    18087246527742016},
            {1140271425290240,     2847929775767680},
            {5695859551535360,     11391714808103425},
            {22782330087802114,    45142167999742465},
            {18436610974547968,    36592846484013056},
            {73467172239704064,    218993038045741056},
            {510043674424442880,   1092144942903591168},
            {2256347479845175809,  4548653250257223936},
            {9151879600417145346,  4541041318390203653},
            {18161339485559327242, 18308280461636670484},
            {18169816849563789352, 17892889625418027088},
            {17339035177126502560, 16158986107705376832},
            {13835058055282163712, 9223372036854775808},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
    };
    //================================================================================
    ull PawnAttacks[64][2] = {
            {512,                  1280},
            {2560,                 5120},
            {10240,                20480},
            {40960,                16384},
            {131072,               327680},
            {655360,               1310720},
            {2621440,              5242880},
            {10485760,             4194304},
            {33554432,             83886080},
            {167772160,            335544320},
            {671088640,            1342177280},
            {2684354560,           1073741824},
            {8589934592,           21474836480},
            {42949672960,          85899345920},
            {171798691840,         343597383680},
            {687194767360,         274877906944},
            {2199023255552,        5497558138880},
            {10995116277760,       21990232555520},
            {43980465111040,       87960930222080},
            {175921860444160,      70368744177664},
            {562949953421312,      1407374883553280},
            {2814749767106560,     5629499534213120},
            {11258999068426240,    22517998136852480},
            {45035996273704960,    18014398509481984},
            {144115188075855872,   360287970189639680},
            {720575940379279360,   1441151880758558720},
            {2882303761517117440,  5764607523034234880},
            {11529215046068469760, 4611686018427387904},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {45035996273704960,    18014398509481984},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
            {0,                    0},
    };
    //================================================================================
    ull Isolated[64] = {
            0, 0, 0, 0, 0, 0, 0, 0, 144680345676153346, 361700864190383365, 723401728380766730, 1446803456761533460,
            2893606913523066920, 5787213827046133840, 11574427654092267680, 4629771061636907072, 144680345676153346,
            361700864190383365, 723401728380766730, 1446803456761533460, 2893606913523066920, 5787213827046133840,
            11574427654092267680, 4629771061636907072, 144680345676153346, 361700864190383365, 723401728380766730,
            1446803456761533460, 2893606913523066920, 5787213827046133840, 11574427654092267680, 4629771061636907072,
            144680345676153346, 361700864190383365, 723401728380766730, 1446803456761533460, 2893606913523066920,
            5787213827046133840, 11574427654092267680, 4629771061636907072, 144680345676153346, 361700864190383365,
            723401728380766730, 1446803456761533460, 2893606913523066920, 5787213827046133840, 11574427654092267680,
            4629771061636907072, 144680345676153346, 361700864190383365, 723401728380766730, 1446803456761533460,
            2893606913523066920, 5787213827046133840, 11574427654092267680, 4629771061636907072, 0, 0, 0, 0, 0, 0, 0,
            0};

    int passedBonusOpening[8] = {
            0, 4, -19, -8, 19, 48, 58, 0
    };

    int passedBonusEnding[8] = {
            0, 4, 17, 32, 51, 67, 90, 0
    };
    int isolatedPenaltyOpening[8] = {
            1, 5, 14, 13, 22, 14, 14, 20
    };

    int isolatedPenaltyEnding[8] = {
            5, 13, 21, 26, 22, 16, 10, 6
    };
    int backwardPenaltyOpening[8] = {
            -4, 3, 2, 21, 8, 7, 13, -1
    };

    int backwardPenaltyEnding[8] = {
            2, 7, 13, 14, 7, 1, 1, 3
    };
    int doubledPenaltyOpening[8] = {
            36, 9, 2, 23, 18, 20, 0, 26
    };

    int doubledPenaltyEnding[8] = {
            46, 25, 31, 24, 21, 19, 29, 44
    };
    ull openFilePenalty[8] = {
            6, 5, 4, 4, 4, 4, 5, 6
    };
    ull halfopenFilePenalty[8] = {
            5, 4, 3, 3, 3, 3, 4, 5
    };
    ull pawnStormPenalty[8] = {
            0, 0, 0, 1, 2, 3, 0, 0
    };
    ull piecePhase[6] = {
            0, 3, 3, 5, 10, 0
    };
    ull files[8] = {
            0x0101010101010101,
            0x0202020202020202,
            0x0404040404040404,
            0x0808080808080808,
            0x1010101010101010,
            0x2020202020202020,
            0x4040404040404040,
            0x8080808080808080
    };
    ull ranks[8] = {
            0x00000000000000FF,
            0x000000000000FF00,
            0x0000000000FF0000,
            0x00000000FF000000,
            0x000000FF00000000,
            0x0000FF0000000000,
            0x00FF000000000000,
            0xFF00000000000000
    };
    ull kingSafetyTable[100] = {
            21, 7, 11, 7, 7, 9, 5, 7, 10, 14, 15, 20, 19, 20, 25, 22, 28, 40, 45, 47, 46, 60, 56, 82, 86, 102, 98,
            109, 107, 117, 125, 132, 159, 168, 181, 188, 211, 213, 234, 216, 265, 276, 288, 272, 308, 339, 351, 355,
            374, 354, 370, 412, 420, 481, 439, 457, 478, 478, 441, 509, 494, 431, 517, 569, 562, 499, 500, 531, 523,
            500, 500, 500, 522, 517, 500, 500, 500, 508, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
            500, 500, 500, 500, 500, 500, 500, 500, 500, 500
    };
public:
    Evaluate(Board *b);


    int pawnStructure(int phase);

    int kingSafty(int myKingSafety, int hisKingSafty, int phase); // arguments are calculated in mobility
    int interpolateScore(int scoreOp, int scoreEd, int phase);
};

#endif //KINGSMEN_EVALUATE_H
